<% @title = "Log In" %>

<h2>Log in</h2>


<div class="form-row form-horizontal form-element">

  <form action="/log_in" method="POST" class="form-group">
    <div class="form-group row">
      <label for="username" class="col-sm-6 col-form-label">Username</label>
      <input type="text" name="username" class="col-sm-6 form-control" placeholder="blogger123" required>
      <br>
    </div>

    <div class="form-group row">
      <label for="password" class="col-sm-6 col-form-label">Password</label><br>
      <input type="password" name="password" class="col-sm-6 form-control" placeholder="**********" required><br>
    </div>

    <div class="form-group row center">
      <a href="/"><button type="button" class="btn btn-outline-secondary btn-sm current_btn">Cancel</button></a>

      <button type="submit" class="btn btn-outline-secondary btn-sm current_btn">Log In</button>
    </div>
  </form>
</div>
<div class="center">
    Facebook 

    <script>
    // This is called with the results from from FB.getLoginStatus().
      function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
          // Logged into your app and Facebook.
          testAPI();
        } else if (response.status === 'not_authorized') {
          // The person is logged into Facebook, but not your app.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into this app.';
        } else {
          // The person is not logged into Facebook, so we're not sure if
          // they are logged into this app or not.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into Facebook.';
        }
      }

      // This function is called when someone finishes with the Login
      // Button. See the onlogin handler attached to it in the sample
      // code below.
      function checkLoginState() {
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
        });
      }

      window.fbAsyncInit = function() {
        FB.init({
          appId      : '1994177677301128',
          cookie     : true,  // enable cookies to allow the server to access 
                              // the session
          xfbml      : true,  // parse social plugins on this page
          version    : 'v3.0' // use version 3.0
        });
        
        // Now that we've initialized the JavaScript SDK, we call 
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
        });
      };

      // Load the SDK asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0&appId=1994177677301128&autoLogAppEvents=1';
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));

      // Here we run a very simple test of the Graph API after login is
      // successful.  See statusChangeCallback() for when this call is made.
      function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
          console.log('Successful login for: ' + response.name);
          document.getElementById('status').innerHTML =
            'Thanks for logging in, ' + response.name + '!';
        });
      }
    </script>

    <!--
      Below we include the Login Button social plugin. This button uses
      the JavaScript SDK to present a graphical Login button that triggers
      the FB.login() function when clicked.
    -->

    <fb:login-button scope="public_profile,email" autologoutlink="true" onlogin="checkLoginState();">
    </fb:login-button>

    <div id="status" class="center">
    </div> 
</div>
<div class="row center">
  <div class="col-12">
    <p>Don't have an account? <a href="/sign_up">Sign up</a> for one.</p>
    <p>Forgot your password? Aww, so sad. Your account is locked forever. Please <a href="/sign_up">start over</a>.</p>
  </div>

</div>
